Runtime: 44ms Beats 38.35%

class Solution {
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[]{i,j};
                }
            }
        }
        return new int[] {};
    }
}

Runtime: 2ms | Beats 98.92%

class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            int x = nums[i];
            int need = target - x;
        
        if (map.containsKey(need)) {
            return new int[] { map.get(need), i };
        } 
        else {
            map.put(x, i);
        }
        }
        return new int[] {};
    }
}
